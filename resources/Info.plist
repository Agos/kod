{
  CFBundleExecutable = "${EXECUTABLE_NAME}";
  CFBundleShortVersionString = "0.0.1";
  CFBundleVersion = "0.0.1";
  CFBundleIconFile = "kod.icns";
  CFBundleIdentifier = "se.hunch.kod";
  CFBundleInfoDictionaryVersion = "6.0";
  CFBundleName = "${PRODUCT_NAME}";
  CFBundlePackageType = APPL;
  CFBundleSignature = Kode;
  CFBundleDevelopmentRegion = English;

  NSMainNibFile = MainMenu;
  NSPrincipalClass = NSApplication;

  ATSApplicationFontsPath = "fonts/";

  LSArchitecturePriority = ( "x86_64", i386 );
  LSMinimumSystemVersion = "10.6.0";
  LSMinimumSystemVersionByArchitecture = { "x86_64" = "10.6"; };

  /* Sparkle (other settings are hard-coded) */
  SUPublicDSAKeyFile = "dsa_pub.pem";

  BreakpadProduct = "${EXECUTABLE_NAME}";
  BreakpadProductDisplay = "${PRODUCT_NAME}";
  BreakpadVendor = "the developers of Kod";
  BreakpadReportInterval = 60;
  BreakpadRequestEmail = YES;
  BreakpadRequestComments = YES;

  NSServices = (
    {
      NSMenuItem = { default = "Kod/Open link in Kod"; };
      NSMessage = openLink;
      NSPortName = Kod;
      NSSendTypes = ( "public.url" );
    }
  );

  CFBundleURLTypes = (
    {
      CFBundleTypeRole = Viewer;
      CFBundleURLIconFile = "";
      CFBundleURLName = Kod;
      CFBundleURLSchemes = ( kod );
    },
    {
      CFBundleURLName = "Web site URL";
      CFBundleURLSchemes = ( http, https );
    },
    {
      CFBundleURLName = "Local file URL";
      CFBundleURLSchemes = ( file );
    }
  );

  CFBundleDocumentTypes = (
    { CFBundleTypeName = "ADA source";
      CFBundleTypeExtensions = (adb, ads);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Compiled AppleScript";
      CFBundleTypeExtensions = (scpt);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "AppleScript source";
      CFBundleTypeExtensions = (applescript);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "ActionScript source";
      CFBundleTypeExtensions = (as);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "ASP document";
      CFBundleTypeExtensions = (asp, asa);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "ASP.NET document";
      CFBundleTypeExtensions = (aspx, ascx, asmx, ashx);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "BibTeX bibliography";
      CFBundleTypeExtensions = (bib);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "C source";
      CFBundleTypeExtensions = (c);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "C++ source";
      CFBundleTypeExtensions = (cc, cp, cpp, cxx, "c++");
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "C# source";
      CFBundleTypeExtensions = (cs);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Context Free Design Grammar";
      CFBundleTypeExtensions = (cfdg);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Comma separated values";
      CFBundleTypeExtensions = (csv);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Tab separated values";
      CFBundleTypeExtensions = (tsv);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "CGI script";
      CFBundleTypeExtensions = (cgi, fcgi);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Configuration file";
      CFBundleTypeExtensions = (cfg, conf, config, htaccess);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Cascading style sheet";
      CFBundleTypeExtensions = (css);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Differences file";
      CFBundleTypeExtensions = (diff);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Document Type Definition";
      CFBundleTypeExtensions = (dtd);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Dylan source";
      CFBundleTypeExtensions = (dylan);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Erlang source";
      CFBundleTypeExtensions = (erl, hrl);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "F-Script source";
      CFBundleTypeExtensions = (fscript);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Fortran source";
      CFBundleTypeExtensions = (f, for, fpp, f77, f90, f95);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Header";
      CFBundleTypeExtensions = (h, pch);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "C++ header";
      CFBundleTypeExtensions = (hh, hpp, hxx, "h++");
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "GTD document";
      CFBundleTypeExtensions = (gtd, gtdlog);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Haskell source";
      CFBundleTypeExtensions = (hs, lhs);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "HTML document";
      CFBundleTypeExtensions = (htm, html, phtml, shtml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Include file";
      CFBundleTypeExtensions = (inc);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "iCalendar schedule";
      CFBundleTypeExtensions = (ics);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "MS Windows initialization file";
      CFBundleTypeExtensions = (ini);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Io source";
      CFBundleTypeExtensions = (io);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Java source";
      CFBundleTypeExtensions = (java);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "BeanShell script";
      CFBundleTypeExtensions = (bsh);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Java properties file";
      CFBundleTypeExtensions = (properties);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "JavaScript source";
      CFBundleTypeExtensions = (js, htc);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Java Server Page";
      CFBundleTypeExtensions = (jsp);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName       = "LDAP Data Interchange Format";
      CFBundleTypeExtensions = (ldif);
      CFBundleTypeIconFile   = TMDocument;
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "LISP source";
      CFBundleTypeExtensions = (lisp, cl, l, lsp, mud, el);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Log file";
      CFBundleTypeExtensions = (log);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "LOGO source";
      CFBundleTypeExtensions = (logo);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "LUA source";
      CFBundleTypeExtensions = (lua);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Markdown document";
      CFBundleTypeExtensions = (md, markdown, mdown, markdn);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Mediawiki document";
      CFBundleTypeExtensions = (wiki, wikipedia, mediawiki);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "MIPS assembler source";
      CFBundleTypeExtensions = (s, mips, spim, asm);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Modula-3 source";
      CFBundleTypeExtensions = (m3, cm3);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "MoinMoin document";
      CFBundleTypeExtensions = (moinmoin);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Objective-C source";
      CFBundleTypeExtensions = (m);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Objective-C++ source";
      CFBundleTypeExtensions = (mm);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "OCaml source";
      CFBundleTypeExtensions = (ml, mli, mll, mly);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Pascal source";
      CFBundleTypeExtensions = (pas, p);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Patch file";
      CFBundleTypeExtensions = (patch);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Perl source";
      CFBundleTypeExtensions = (pl, pod, perl);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Perl module";
      CFBundleTypeExtensions = (pm);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "PHP source";
      CFBundleTypeExtensions = (php, php3, php4, php5);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "PostScript source";
      CFBundleTypeExtensions = (ps, eps);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Property list";
      CFBundleTypeExtensions = (dict, plist, scriptSuite, scriptTerminology);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Python source";
      CFBundleTypeExtensions = (py, rpy, cpy, python);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "R source";
      CFBundleTypeExtensions = (r, s);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Remind document";
      CFBundleTypeExtensions = (rem, remind);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "reStructuredText document";
      CFBundleTypeExtensions = (rst, rest);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "HTML with embedded Ruby";
      CFBundleTypeExtensions = (rhtml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "SQL with embedded Ruby";
      CFBundleTypeExtensions = (erbsql);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Ruby source";
      CFBundleTypeExtensions = (rb, rbx, rjs, rxml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Scheme source";
      CFBundleTypeExtensions = (scm, sch);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Setext document";
      CFBundleTypeExtensions = (ext);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Shell script";
      CFBundleTypeExtensions = (sh, ss, bashrc, "bash_profile", "bash_login", profile, "bash_logout");
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Slate source";
      CFBundleTypeExtensions = (slate);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "SQL source";
      CFBundleTypeExtensions = (sql);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Standard ML source";
      CFBundleTypeExtensions = (sml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Strings document";
      CFBundleTypeExtensions = (strings);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Scalable vector graphics";
      CFBundleTypeExtensions = (svg);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "SWIG source";
      CFBundleTypeExtensions = (i, swg);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Tcl source";
      CFBundleTypeExtensions = (tcl);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "TeX document";
      CFBundleTypeExtensions = (tex, sty, cls);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Plain text document";
      CFBundleTypeExtensions = (txt, text, utf8);
      CFBundleTypeMIMETypes = ("text/plain");
      CFBundleTypeOSTypes = (TEXT, sEXT, ttro);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Textile document";
      CFBundleTypeExtensions = (textile);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "XHTML document";
      CFBundleTypeExtensions = (xhtml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "XML document";
      CFBundleTypeExtensions = (xml, rss, tld, pt, cpt, dtml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "XSL stylesheet";
      CFBundleTypeExtensions = (xsl, xslt);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Electronic business card";
      CFBundleTypeExtensions = (vcf, vcard);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "Visual Basic source";
      CFBundleTypeExtensions = (vb);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = "YAML document";
      CFBundleTypeExtensions = (yaml, yml);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeExtensions = ( inetloc, webloc );
      CFBundleTypeName = "Remote resource";
      CFBundleTypeRole = Viewer;
    },

    /* generic types */
    /* generic plain text types */
    { CFBundleTypeName = "Text document";
      CFBundleTypeExtensions = (nfo);
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    /* generic source code types */
    { CFBundleTypeName = "Source";
      CFBundleTypeExtensions = (
        g, vss, d, e, gri, inf, mel, build, re,
        textmate, fxscript, lgt
      );
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    /* generic document types */
    { CFBundleTypeName = "Document";
      CFBundleTypeExtensions = (
        cfm, cfml, dbm, dbml, dist, dot, ics, ifb, dwt, g,
        in, l, m4, mp, mtml, orig, pde,
        rej, servlet, s5, tmp, tpl, tt,
        xql, yy, "*"
      );
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
    },
    { CFBundleTypeName = Folder;
      CFBundleTypeRole = Editor;
      LSItemContentTypes = ( public.directory );
    },
    { CFBundleTypeName = "Document";
      CFBundleTypeOSTypes = ("****");
      CFBundleTypeRole = Editor;
      NSDocumentClass = KTabContents;
      LSItemContentTypes = ( public.data );
    },
  );

}
